inputs:
  container:
    description: 'Container name'
    required: true
  username:
    description: 'Docker Hub username'
    required: true
  password:
    description: 'Docker Hub password'
    required: true
  dev:
    description: 'Build dev containers (DEBUG=1)'
    required: false
    default: '0'

runs:
  using: "composite"
  steps:
    -
      name: Set variables
      id: vars
      run: |
        echo "::set-output name=sha::$(echo ${GITHUB_SHA} | cut -c 1-8)"
        echo "::set-output name=repo::${{ inputs.username }}/${{ inputs.container }}"
        echo "::set-output name=cache-tag::${{ inputs.username }}/buildcache:${{ inputs.container }}${{ inputs.dev == '1' && '-dev' || '' }}"
        echo "::set-output name=build-date::$(date -u +%FT%TZ)"
      shell: bash
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      if: inputs.dev == '1'
    -
      name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}
    -
      name: Build and Push
      uses: docker/build-push-action@v2
      with:
        push: true
        platforms: ${{ inputs.dev == '0' && 'linux/amd64' || 'linux/amd64,linux/arm64' }}
        build-args: |
          GIT_REV=${{ steps.vars.outputs.sha }}
          BUILD_DATE=${{ steps.vars.outputs.build-date }}
          DEBUG=${{ inputs.dev }}
        context: ${{ inputs.container == 'app' && './' || format('./{0}/', inputs.container) }}
        file: ${{ format('./{0}/Dockerfile', inputs.container == 'app' && 'backend' || inputs.container) }}
        tags: |
          ${{ steps.vars.outputs.repo }}:${{ inputs.dev == '0' && 'latest' || 'dev' }}
          ${{ inputs.dev == '0' && format('{0}:{1}', steps.vars.outputs.repo, steps.vars.outputs.sha) || '' }}
        cache-from: type=registry,ref=${{ steps.vars.outputs.cache-tag }}
        cache-to: type=registry,ref=${{ steps.vars.outputs.cache-tag }},mode=max
    -
      name: Update Docker Hub description
      uses: peter-evans/dockerhub-description@v3
      if: inputs.dev == '0'
      with:
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}
        repository: ${{ steps.vars.outputs.repo }}
        short-description: 'A serious website for a serious domain name: jew.pizza (${{ inputs.container }} container)'
