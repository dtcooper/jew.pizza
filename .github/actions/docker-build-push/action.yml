inputs:
  container:
    description: 'Container name'
    required: true
  context:
    description: 'Docker context directory'
    required: false
    default: ''
  dockerfile:
    description: 'Dockerfile path'
    required: false
    default: ''
  username:
    description: 'Docker Hub username'
    required: false
    default: dtcooper
  password:
    description: 'Docker Hub password'
    required: true
  token:
    description: 'Docker Hub access token'
    required: true
  dev:
    description: 'Build Dev Containers'
    required: false
    default: '1'

runs:
  using: "composite"
  steps:
    -
      name: Set variables
      id: vars
      run: |
        echo "::set-output name=sha::$(echo ${GITHUB_SHA} | cut -c 1-8)"
        echo "::set-output name=repo::${{ inputs.username }}/jewpizza-${{ inputs.container }}"
        echo "::set-output name=build-date::$(date -u +%FT%TZ)"
      shell: bash
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    -
      name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ inputs.username }}
        password: ${{ inputs.token }}
    -
      name: Build and push
      uses: docker/build-push-action@v2
      with:
        push: true
        platforms: ${{ inputs.dev == '1' && 'linux/arm64,linux/amd64' || 'linux/amd64' }}
        build-args: |
          GIT_REV=${{ steps.vars.outputs.sha }}
          BUILD_DATE=${{ steps.vars.outputs.build-date }}
          DEBUG=${{ inputs.dev }}
        context: ${{ inputs.context == '' && format('./{0}/', inputs.container) || inputs.context}}
        file: ${{ inputs.dockerfile == '' && format('./{0}/Dockerfile', inputs.container) || inputs.dockerfile}}
        tags: ${{ inputs.dev == '1' && format('{0}:dev', steps.vars.outputs.repo) || format('{0}:latest,{0}:{1}', steps.vars.outputs.repo, steps.vars.outputs.sha) }}
        cache-from: type=registry,ref=${{ steps.vars.outputs.repo }}:buildcache${{ inputs.dev == '1' && '-dev' || '' }}
        cache-to: type=registry,ref=${{ steps.vars.outputs.repo }}:buildcache${{ inputs.dev == '1' && '-dev' || '' }},mode=max
    -
      name: Update Docker Hub description
      uses: peter-evans/dockerhub-description@v2
      with:
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}
        repository: ${{ steps.vars.outputs.repo }}
        short-description: jew.pizza website ${{ inputs.container }} container
