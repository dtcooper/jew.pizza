inputs:
  container:
    description: 'Container name'
    required: true
  context:
    description: 'Docker context directory'
    required: false
    default: ./
  dockerfile:
    description: 'Dockerfile path'
    required: false
    default: ./Dockerfile
  debug:
    description: 'Debug flag'
    required: false
    default: '0'
  dockerhub_username:
    description: 'Docker Hub username'
    required: false
    default: dtcooper
  dockerhub_token:
    description: 'Docker Hub access token'
    required: true

runs:
  using: "composite"
  steps:
    -
      name: Get short SHA
      id: sha
      run: echo "::set-output name=sha::$(echo ${GITHUB_SHA} | cut -c1-8)"
      shell: bash
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    -
      name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ inputs.dockerhub_username }}
        password: ${{ inputs.dockerhub_token }}
    -
      name: Build and push
      uses: docker/build-push-action@v2
      with:
        push: true
        platforms: linux/amd64,linux/arm64
        build-args: DEBUG=${{ inputs.debug }}
        context: ${{ inputs.context }}
        file: ${{ inputs.dockerfile }}
        tags: ${{ inputs.container }}:${{ inputs.debug == '1' && 'debug' || 'latest' }},${{ inputs.container }}:${{ inputs.debug == '1' && 'debug-' || '' }}${{ steps.sha.outputs.sha }}
        cache-from: type=registry,ref=${{ inputs.container }}:${{ inputs.debug == '1' && 'debug-' || '' }}buildcache
        cache-to: type=registry,ref=${{ inputs.container }}:${{ inputs.debug == '1' && 'debug-' || '' }}buildcache,mode=max
