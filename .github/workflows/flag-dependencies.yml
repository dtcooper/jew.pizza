name: Flag Stale Dependencies

on:
  schedule:
    - cron:  '0 * * * *'

  workflow_dispatch:
    inputs:
      force_email:
        description: Force sending an email
        required: false
        default: false

concurrency:
  group: dependency-flagger
  cancel-in-progress: true

jobs:
  flag-stale-deps:
    name: Flagger
    runs-on: ubuntu-20.04
    env:
      PYTHON_VERSION: '3.10'
      LASTVERSION_VERSION: '2.4.4'
      POETRY_VERSION: '1.1.13'
      YQ_VERSION: '2.14.0'

    steps:
      -
        name: Checkout repo
        uses: actions/checkout@v3

      -
        name: Set up Python 3
        uses: actions/setup-python@v3
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      -
        name: Check versions
        env:
          GITHUB_API_TOKEN: ${{ github.token }}

        run: |
          sudo pip install "lastversion==${LASTVERSION_VERSION}" "poetry==${POETRY_VERSION}" "yq==${YQ_VERSION}"

          echo '# Misc Dependencies' >> dependencies.txt
          ./scripts/check-versions.sh github-action | awk '{print " * " $0}' | tee -a dependencies.txt

          echo >> dependencies.txt

          echo '# Frontend' >> dependencies.txt
          cd frontend
          npm install
          npm outdated | awk '{print " * " $0}' | tee -a ../dependencies.txt
          cd ..

          echo >> dependencies.txt

          echo '# Backend' >> dependencies.txt
          cd backend
          poetry env use "python${PYTHON_VERSION}"
          poetry show -o | awk '{print " * " $0}' | tee -a ../dependencies.txt
          cd ..

          echo 'Done!'

      -
        name: Cache versions
        uses: actions/cache@v3
        id: versions-have-changed
        with:
          path: dependencies.txt
          key: versions-${{ hashFiles('dependencies.txt') }}

      -
        name: Send mail
        uses: dawidd6/action-send-mail@v3
        if: steps.versions-have-changed.outputs.cache-hit != 'true' || (github.event_name == 'workflow_dispatch' && github.event.inputs.force_email)
        with:
          server_address: ${{ secrets.MAIL_SERVER_ADDRESS }}
          server_port: ${{ secrets.MAIL_SERVER_PORT }}
          username: ${{secrets.MAIL_USERNAME}}
          password: ${{secrets.MAIL_PASSWORD}}
          to: ${{ secrets.MAIL_TO_ADDRESS }}
          from: ${{ secrets.MAIL_FROM }}
          subject: jewpizza Dependencies Changed!
          body: file://dependencies.txt
          html_body: file://dependencies.txt
          convert_markdown : true
