x-service-defaults: &service-defaults
  restart: always

x-app-template: &app-template
  <<: *service-defaults
  image: dtcooper/jewpizza-app:${PINNED_CONTAINER_VERSION:-latest}
  build:
    context: .
    dockerfile: backend/Dockerfile
    args:
      - "DEBUG=${DEBUG:-0}"
  volumes:
    - ./.env:/.env:ro
    - ./serve/static:/static_root
    - ./serve/media:/media_root
  depends_on:
    - db
    - redis

services:
  app:
    <<: *app-template
    environment:
      - "TZ=${TIMEZONE:-US/Eastern}"

  tasks:
    <<: *app-template
    environment:
      - RUN_HUEY=1
      - "TZ=${TIMEZONE:-US/Eastern}"

  radio:
    <<: *service-defaults
    image: dtcooper/jewpizza-radio:${PINNED_CONTAINER_VERSION:-latest}
    build:
      context: radio
      args:
        - "DEBUG=${DEBUG:-0}"
    volumes:
      - ./.env:/.env:ro
    depends_on:
      - app
      - icecast
      - redis
    environment:
      - "TZ=${TIMEZONE:-US/Eastern}"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    labels:
      - "autoheal=true"

  sse:
    <<: *service-defaults
    image: dtcooper/jewpizza-sse:${PINNED_CONTAINER_VERSION:-latest}
    build:
      context: sse
      args:
        - "DEBUG=${DEBUG:-0}"
    volumes:
      - ./.env:/.env:ro
    depends_on:
      - redis
    environment:
      - "TZ=${TIMEZONE:-US/Eastern}"

  nginx:
    <<: *service-defaults
    image: dtcooper/jewpizza-nginx:${PINNED_CONTAINER_VERSION:-latest}
    build:
      context: nginx
    volumes:
      - nginx_secrets:/etc/letsencrypt
      - ./.env:/.env:ro
      - ./serve:/serve
    depends_on:
      - app
      - icecast
      - logs
      - sse
      - umami
    environment:
      - "CERTBOT_DNS_PROPAGATION_SECONDS=${CERTBOT_DNS_PROPAGATION_SECONDS:-90}"
      - "CERTBOT_EMAIL=${EMAIL_ADDRESS:?EMAIL_ADDRESS needs to be set. See .env file.}"
      - "DEBUG=${DEBUG:-0}"
      - "DIGITALOCEAN_API_TOKEN=${DIGITALOCEAN_API_TOKEN:-}"
      - "STAGING=${LETSENCRYPT_STAGING:-0}"
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"

  icecast:
    <<: *service-defaults
    image: dtcooper/jewpizza-icecast:${PINNED_CONTAINER_VERSION:-latest}
    build:
      context: icecast
    environment:
      - "DOMAIN_NAME=${DOMAIN_NAME:?DOMAIN_NAME needs to be set. See .env file.}"
      - "EMAIL_ADDRESS=${EMAIL_ADDRESS:?EMAIL_ADDRESS needs to be set. See .env file.}"
      - "ICECAST_ADMIN_PASSWORD=${ICECAST_ADMIN_PASSWORD:?ICECAST_ADMIN_PASSWORD needs to be set. See .env file.}"
      - "ICECAST_SOURCE_PASSWORD=${ICECAST_SOURCE_PASSWORD:?ICECAST_SOURCE_PASSWORD needs to be set. See .env file.}"
      - "TZ=${TIMEZONE:-US/Eastern}"
    ports:
      - "${ICECAST_PORT:-8888}:8888"

  db:
    <<: *service-defaults
    image: library/postgres:14.1-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
      - ./scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    environment:
      - POSTGRES_PASSWORD=postgres
      - "TZ=${TIMEZONE:-US/Eastern}"

  redis:
    <<: *service-defaults
    image: library/redis:6.2-alpine
    volumes:
      - redis_data:/data
    environment:
      - "TZ=${TIMEZONE:-US/Eastern}"

  umami:
    <<: *service-defaults
    image: ghcr.io/mikecao/umami:postgresql-5d74e86
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/umami
      - DATABASE_TYPE=postgresql
      # SECRET_KEY needs to be set in order to run this container
      - "HASH_SALT=${SECRET_KEY:?SECRET_KEY needs to be set. See .env file.}"
      - "TZ=${TIMEZONE:-US/Eastern}"

  logs:
    <<: *service-defaults
    image: amir20/dozzle:v3.10.2
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - DOZZLE_TAILSIZE=2500
      - DOZZLE_NO_ANALYTICS=true
      - "DOZZLE_BASE=/cmsadmin/tools/logs"
      - "TZ=${TIMEZONE:-US/Eastern}"

  autoheal:
    <<: *service-defaults
    image: willfarrell/autoheal:1.2.0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - AUTOHEAL_START_PERIOD=30
      - "TZ=${TIMEZONE:-US/Eastern}"

volumes:
  nginx_secrets:
  postgres_data:
  redis_data:
